/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
plugins {
  id "com.moowork.node" version "1.2.0"
  id "org.ajoberstar.grgit" version "2.1.1"
  id "org.ajoberstar.git-publish" version "0.3.3"
}

task clean{
  doFirst {
    delete "$rootDir/acollins.pdf"
    println "rm $rootDir/acollins.pdf"
    delete "$rootDir/index.html"
    println "rm $rootDir/index.html"
  }
}

task exportHTML(type: NpmTask) {
  dependsOn 'npmInstall'
  logger.info('Export index.html version of resume')
  args = ['run', 'exportHTML'] 
}

task exportPDF(type: NpmTask) {
  dependsOn 'npmInstall'
  logger.info('Export acollins.pdf version of resume')
  args = ['run', 'exportPDF'] 
}

task build {
    dependsOn 'exportHTML'
    dependsOn 'exportPDF'
    tasks.findByName('exportHTML').mustRunAfter 'clean'
    tasks.findByName('exportPDF').mustRunAfter 'clean'
}


gitPublish {
  repoUri = 'git@gitlab.crypto.sh:acollins/analogrithems.github.io.git'
  // branch will be created if it doesn't exist
  branch = 'master'

  // generally, you don't need to touch this
  repoDir = file("$rootDir")

  preserve { include '**/*' }
  // message used when committing changes
  commitMessage = 'Update resume automatically' // defaults to 'Generated by gradle-git-publish'
} 


task publish{
  dependsOn 'build'
  dependsOn 'gitPublishPush'
  tasks.findByName('gitPublishPush').mustRunAfter 'build'
}

task cleanBuildPublish {
    dependsOn 'clean'
    dependsOn 'build'
    dependsOn 'publish'
    tasks.findByName('build').mustRunAfter 'clean'
    tasks.findByName('publish').mustRunAfter 'build'
}